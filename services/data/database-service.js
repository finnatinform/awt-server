module.exports = {
    BuildDatabase : function(_Database){
        _Database.serialize(function() {    
            // Create REFERENTS Table
            _Database.run("CREATE TABLE if not exists REFERENTS (IDENT INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, FORE_NAME TEXT, SURE_NAME TEXT, DESCRIPTION TEXT, RANKING INTEGER)");
            // Create COMPANIES Table
            _Database.run("CREATE TABLE if not exists COMPANIES (SHORT_NAME TEXT UNIQUE NOT NULL PRIMARY KEY, CAPTION TEXT)");
            // Create USERS Table
            _Database.run("CREATE TABLE if not exists USERS (IDENT TEXT PRIMARY KEY NOT NULL UNIQUE, COMPANY_IDENT INTEGER, MODEL TEXT, VERSION TEXT, REGISTERED_ON TEXT, PLATFORM TEXT, FOREIGN KEY(COMPANY_IDENT) REFERENCES COMPANIES(SHORT_NAME))");    
            // CREATE EVENTS Table
            _Database.run("CREATE TABLE if not exists EVENTS (IDENT INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, CAPTION TEXT, PLACE TEXT, DESCRIPTION TEXT, START_DATE TEXT, DURATION NUMBER, REFERENT_IDENT INTEGER, HAS_FEEDBACK INTEGER, CAN_BE_RESERVED INTEGER, ICON TEXT, FOREIGN KEY(REFERENT_IDENT) REFERENCES REFERENTS(IDENT))");
            // Create FEEDBACK Table
            _Database.run("CREATE TABLE if not exists FEEDBACKS (IDENT INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, HOW_GOOD INTEGER, USER_IDENT TEXT, START_DATE TEXT, EVENT_IDENT INTEGER, FOREIGN KEY(USER_IDENT) REFERENCES USERS(IDENT), FOREIGN KEY(EVENT_IDENT) REFERENCES EVENT(IDENT))");
            // Create NOTIFICATION Table
            _Database.run("CREATE TABLE if not exists NOTIFICATIONS (IDENT INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL UNIQUE, CAPTION TEXT, DESCRIPTION TEXT, START_DATE TEXT, EVENT_IDENT INTEGER, LAST_EDITED TEXT, FOREIGN KEY(EVENT_IDENT) REFERENCES EVENTS(IDENT))");
            
            /* CREATE LINK TABLES */
            _Database.run("CREATE TABLE if not exists USERS_EVENTS_LINK (USER_IDENT TEXT, EVENT_IDENT INTEGER, RESERVED_ON TEXT, FOREIGN KEY(USER_IDENT) REFERENCES USERS(IDENT), FOREIGN KEY(EVENT_IDENT) REFERENCES EVENTS(IDENT))");             
        });
    }
}
